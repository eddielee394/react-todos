{"version":3,"sources":["actions/todos.js","reducers/todos.js","actions/shared.js","actions/goals.js","reducers/goals.js","reducers/loading.js","reducers/index.js","middleware/checker.js","middleware/index.js","components/Loader.js","components/List.js","components/Todos.js","components/Goals.js","components/Nav.js","components/App.js","index.js"],"names":["addTodo","todo","type","toggleTodo","id","handleAddTodo","name","callback","arguments","length","undefined","dispatch","API","saveTodo","then","handleNotification","concat","catch","handleDeleteTodo","deleteTodo","handleToggleTodo","saveTodoToggle","content","className","progressClassName","autoClose","toast","todos","state","action","filter","map","Object","assign","complete","addGoal","goal","handleAddGoal","saveGoal","handleDeleteGoal","deleteGoal","goals","loading","combineReducers","checker","store","next","applyMiddleware","thunk","logger","connect","props","react_default","a","createElement","react_spinners","color","List","items","item","key","onClick","toggleItem","style","textDecoration","removeItem","Todos","handleAddItem","e","preventDefault","_this","input","value","_this2","this","_this$props","listItems","components_Loader","components_List","placeholder","ref","Component","Goals","Nav","App","Promise","all","fetchTodos","fetchGoals","_ref","_ref2","slicedToArray","receiveData","components_Nav","components_Todos","components_Goals","lib","transition","Slide","newestOnTop","hideProgressBar","createStore","reducer","middleware","ReactDOM","render","es","components_App","document","getElementById"],"mappings":"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","file":"static/js/main.70ee9fd0.chunk.js","sourcesContent":["import API from \"goals-todos-api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * Global Constants\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const ADD_TODO = \"ADD_TODO\";\r\nexport const REMOVE_TODO = \"REMOVE_TODO\";\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\";\r\n\r\n/**\r\n * Add Todo\r\n * @summary Action\r\n * @param todo\r\n * @return {{type: string, todo: *}}\r\n */\r\nconst addTodo = todo => {\r\n  return {\r\n    type: ADD_TODO,\r\n    todo\r\n  };\r\n};\r\n\r\n/**\r\n * Remove Todo\r\n * @summary Action\r\n * @param id\r\n * @return {{type: string, id: *}}\r\n */\r\nconst removeTodo = id => {\r\n  return {\r\n    type: REMOVE_TODO,\r\n    id\r\n  };\r\n};\r\n\r\n/**\r\n * Toggle Todo\r\n * @summary Action\r\n * @param id\r\n * @return {{type: string, id: *}}\r\n */\r\nconst toggleTodo = id => {\r\n  return {\r\n    type: TOGGLE_TODO,\r\n    id\r\n  };\r\n};\r\n\r\n/**\r\n * Async Add Todo handler\r\n * @summary Action Creator\r\n * @async\r\n * @param name\r\n * @param callback\r\n * @return {const(*): Promise<T | never>}\r\n */\r\nexport const handleAddTodo = (name, callback = null) => dispatch => {\r\n  //pass the input value to get the item from the api\r\n  return (\r\n    API.saveTodo(name)\r\n      //then pass the item object\r\n      .then(todo => {\r\n        //update the store with the object using dispatch()\r\n        dispatch(addTodo(todo));\r\n\r\n        //fire callback const\r\n        callback();\r\n\r\n        //Success notification\r\n        handleNotification(\r\n          `${name} successfully added`,\r\n          \"success\",\r\n          \"alert-success\"\r\n        );\r\n\r\n        //if there's an error\r\n      })\r\n      .catch(() => {\r\n        //alert the user\r\n        handleNotification(\r\n          \"There was an error. Please try again.\",\r\n          \"error\",\r\n          \"alert-danger\"\r\n        );\r\n      })\r\n  );\r\n};\r\n\r\n/**\r\n * Async Delete Todo handler\r\n * @summary Action Creator\r\n * @param todo\r\n * @return {const(*): Promise<T | never>}\r\n * @async\r\n */\r\nexport const handleDeleteTodo = todo => dispatch => {\r\n  //first we update the state so the UI changes instantly\r\n  dispatch(removeTodo(todo.id));\r\n  //now we can make the api call to the server\r\n  return (\r\n    API.deleteTodo(todo.id)\r\n      //if there's an error\r\n      .catch(() => {\r\n        //add the previously deleted element back\r\n        dispatch(addTodo(todo));\r\n\r\n        //and send an alert to the user\r\n        handleNotification(\r\n          \"There was an error. Please try again.\",\r\n          \"error\",\r\n          \"alert-danger\"\r\n        );\r\n      })\r\n  );\r\n};\r\n\r\n/**\r\n * Async Toggle Todo handler\r\n * @summary Action Creator\r\n * @param id\r\n * @return {const(*): Promise<T | never>}\r\n * @async\r\n */\r\nexport const handleToggleTodo = id => dispatch => {\r\n  //first we update the state so the UI changes instantly\r\n  dispatch(toggleTodo(id));\r\n  //now we can make the api call to the server\r\n  return (\r\n    API.saveTodoToggle(id)\r\n      //if there's an error\r\n      .catch(() => {\r\n        //add the previously toggled element back\r\n        dispatch(toggleTodo(id));\r\n        //and send an alert to the user\r\n        handleNotification(\r\n          \"There was an error. Please try again.\",\r\n          \"error\",\r\n          \"alert-danger\"\r\n        );\r\n      })\r\n  );\r\n};\r\n\r\n/**\r\n * Toast notification\r\n * @param content {string} Text content the notification should display\r\n * @param type {string} The type of notification.  Accepts: \"default\", \"success\", \"info\", \"warning\", \"error\"\r\n * @param className {string} Container css class name\r\n * @param progressClassName {string} Progress bar css class name\r\n * @param autoClose {number} Time delay in ms before the toast closes\r\n */\r\nconst handleNotification = (\r\n  content,\r\n  type = \"default\",\r\n  className = \"alert-primary\",\r\n  progressClassName = \"bg-primary\",\r\n  autoClose = 1500\r\n) => {\r\n  toast(content, {\r\n    type,\r\n    className: `alert ${className}`,\r\n    progressClassName,\r\n    autoClose\r\n  });\r\n};\r\n","import { ADD_TODO, REMOVE_TODO, TOGGLE_TODO } from \"../actions/todos\";\r\nimport { RECEIVE_DATA } from \"../actions/shared\";\r\n\r\n/**\r\n * Todos Reducer\r\n * @summary Reducer\r\n * @param state\r\n * @param action\r\n * @return {*}\r\n */\r\nconst todos = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return state.concat([action.todo]);\r\n    case REMOVE_TODO:\r\n      return state.filter(todo => todo.id !== action.id);\r\n    case TOGGLE_TODO:\r\n      return state.map(todo =>\r\n        todo.id !== action.id\r\n          ? todo\r\n          : Object.assign({}, todo, { complete: !todo.complete })\r\n      );\r\n    case RECEIVE_DATA:\r\n      return action.todos;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todos;\r\n","import API from \"goals-todos-api\";\r\n\r\n/**\r\n * Global Constants\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const RECEIVE_DATA = \"RECEIVE_DATA\";\r\n\r\n/**\r\n * Receives Data\r\n * @summary Action\r\n * @param todos\r\n * @param goals\r\n * @return {{type: string, todos: *, goals: *}}\r\n */\r\nconst receiveData = (todos, goals) => {\r\n  return {\r\n    type: RECEIVE_DATA,\r\n    todos,\r\n    goals\r\n  };\r\n};\r\n\r\n/**\r\n * Initial Data Handler\r\n * @summary Action Creator\r\n * @async\r\n * @return {function(*): Promise<any[] | never>}\r\n */\r\nexport const handleInitialData = () => dispatch => {\r\n  return Promise.all([API.fetchTodos(), API.fetchGoals()]).then(\r\n    ([todos, goals]) => {\r\n      dispatch(receiveData(todos, goals));\r\n    }\r\n  );\r\n};\r\n","import API from \"goals-todos-api\";\r\nimport { toast } from \"react-toastify\";\r\n\r\n/**\r\n * Global Constants\r\n * @type {string}\r\n * @constant\r\n */\r\nexport const ADD_GOAL = \"ADD_GOAL\";\r\nexport const REMOVE_GOAL = \"REMOVE_GOAL\";\r\n\r\n/**\r\n * Adds Goal\r\n * @summary Action\r\n * @param goal\r\n * @return {{type: string, goal: *}}\r\n */\r\nconst addGoal = goal => {\r\n  return {\r\n    type: ADD_GOAL,\r\n    goal\r\n  };\r\n};\r\n\r\n/**\r\n * Removes goal\r\n * @summary Action\r\n * @param id\r\n * @return {{type: string, id: *}}\r\n */\r\nconst removeGoal = id => {\r\n  return {\r\n    type: REMOVE_GOAL,\r\n    id\r\n  };\r\n};\r\n\r\n/**\r\n * Add Goal Handler\r\n * @summary Action Creator\r\n * @param name\r\n * @param callback\r\n * @return {const(*): Promise<T | never>}\r\n * @async\r\n */\r\nexport const handleAddGoal = (name, callback) => dispatch => {\r\n  //pass the input value to get the item from the api\r\n  return (\r\n    API.saveGoal(name)\r\n      //then pass the item object\r\n      .then(goal => {\r\n        //update the store with the object using dispatch()\r\n        dispatch(addGoal(goal));\r\n        //run the callback const\r\n        callback();\r\n\r\n        //Success notification\r\n        handleNotification(\r\n          `${name} successfully added`,\r\n          \"success\",\r\n          \"alert-success\"\r\n        );\r\n\r\n        //if there's an error\r\n      })\r\n      .catch(() => {\r\n        //and alert the user\r\n        handleNotification(\r\n          \"There was an error. Please try again.\",\r\n          \"error\",\r\n          \"alert-danger\"\r\n        );\r\n      })\r\n  );\r\n};\r\n\r\n/**\r\n * Delete Goal Handler\r\n * @summary Action Creator\r\n * @param goal\r\n * @return {const(*): Promise<T | never>}\r\n * @async\r\n */\r\nexport const handleDeleteGoal = goal => dispatch => {\r\n  //update the store\r\n  dispatch(removeGoal(goal));\r\n  //return the api\r\n  return API.deleteGoal(goal.id).catch(() => {\r\n    //if error, add the item back\r\n    dispatch(addGoal(goal));\r\n\r\n    //and alert the user\r\n    handleNotification(\r\n      \"There was an error. Please try again.\",\r\n      \"error\",\r\n      \"alert-danger\"\r\n    );\r\n  });\r\n};\r\n\r\n/**\r\n * Toast notification\r\n * @param content {string} Text content the notification should display\r\n * @param type {string} The type of notification.  Accepts: \"info\" | \"success\" | \"warning\" | \"error\" | \"default\"\r\n * @param className {string} Container css class name\r\n * @param progressClassName {string} Progress bar css class name\r\n * @param autoClose {number} Time delay in ms before the toast closes\r\n */\r\nconst handleNotification = (\r\n  content,\r\n  type = \"default\",\r\n  className = \"alert-primary\",\r\n  progressClassName = \"bg-primary\",\r\n  autoClose = 1500\r\n) => {\r\n  toast(content, {\r\n    type,\r\n    className: `alert ${className}`,\r\n    progressClassName,\r\n    autoClose\r\n  });\r\n};\r\n","import { ADD_GOAL, REMOVE_GOAL } from \"../actions/goals\";\r\nimport { RECEIVE_DATA } from \"../actions/shared\";\r\n\r\n/**\r\n * Goals Reducer\r\n * @summary Reducer\r\n * @param state\r\n * @param action\r\n * @return {*}\r\n */\r\nconst goals = (state = [], action) => {\r\n  switch (action.type) {\r\n    case ADD_GOAL:\r\n      return state.concat([action.goal]);\r\n    case REMOVE_GOAL:\r\n      return state.filter(goal => goal.id !== action.id);\r\n    case RECEIVE_DATA:\r\n      return action.goals;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default goals;\r\n","import { RECEIVE_DATA } from \"../actions/shared\";\r\n\r\n/**\r\n * Loading Reducer\r\n * @summary Reducer\r\n * @param state\r\n * @param action\r\n * @return {boolean}\r\n */\r\nconst loading = (state = true, action) => {\r\n  switch (action.type) {\r\n    case RECEIVE_DATA:\r\n      return false;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default loading;\r\n","import { combineReducers } from \"redux\";\r\nimport todos from \"./todos\";\r\nimport goals from \"./goals\";\r\nimport loading from \"./loading\";\r\n\r\n/**\r\n * Root reducer\r\n * @summary Root Reducer\r\n * @parm todos\r\n * @param goals\r\n * @param loading\r\n */\r\nexport default combineReducers({\r\n  //apply reducers\r\n  todos,\r\n  goals,\r\n  loading\r\n});\r\n","import { ADD_GOAL } from \"../actions/goals\";\r\nimport { ADD_TODO } from \"../actions/todos\";\r\n\r\n/**\r\n * Checks the action type and returns a notification.\r\n * @summary middlware\r\n * @param store\r\n * @return {function(*): function(*=): *}\r\n */\r\nconst checker = store => next => action => {\r\n  // if (action.type === ADD_TODO) {\r\n  //   let alertText = `Don't forget to ${action.todo.name}`;\r\n  //   alert(alertText);\r\n  // }\r\n  //\r\n  // if (action.type === ADD_GOAL) {\r\n  //   let alertText = \"That's a great goal!\";\r\n  //   alert(alertText);\r\n  // }\r\n\r\n  //otherweise move to the next action\r\n  return next(action);\r\n};\r\n\r\nexport default checker;\r\n","import logger from \"./checker\";\r\nimport thunk from \"redux-thunk\";\r\nimport { applyMiddleware } from \"redux\";\r\n\r\n/**\r\n * Middleware\r\n */\r\nexport default applyMiddleware(thunk, logger);\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ScaleLoader } from \"react-spinners\";\r\n\r\nconst Loader = props => {\r\n  const { loading } = props;\r\n  return (\r\n    <div className=\"text-center justify-content-center my-4\">\r\n      <ScaleLoader color={\"#00c6ff\"} loading={loading} />\r\n    </div>\r\n  );\r\n};\r\n\r\n/**\r\n * Export connected component\r\n */\r\nexport default connect(state => ({\r\n  loading: state.loading\r\n}))(Loader);\r\n","import React from \"react\";\r\n\r\nconst List = props => {\r\n  const listClass = `list-group goal-list my-4`;\r\n  const listItemClass = \"list-group-item\";\r\n\r\n  return (\r\n    <ul className={listClass}>\r\n      {props.items.map(item => (\r\n        <li className={listItemClass} key={item.id}>\r\n          <span\r\n            onClick={() => props.toggleItem && props.toggleItem(item.id)}\r\n            style={{ textDecoration: item.complete ? \"line-through\" : \"none\" }}\r\n          >\r\n            {item.name}\r\n          </span>\r\n          <button\r\n            className=\"btn btn-danger btn-sm ml-2\"\r\n            onClick={() => props.removeItem(item)}\r\n          >\r\n            X\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  handleAddTodo,\r\n  handleDeleteTodo,\r\n  handleToggleTodo\r\n} from \"../actions/todos\";\r\nimport Loader from \"./Loader\";\r\nimport List from \"./List\";\r\n\r\nclass Todos extends Component {\r\n  handleAddItem = e => {\r\n    e.preventDefault();\r\n    const name = this.input.value;\r\n    this.props.dispatch(handleAddTodo(name, () => (this.input.value = \"\")));\r\n  };\r\n\r\n  removeItem = todo => {\r\n    this.props.dispatch(handleDeleteTodo(todo));\r\n  };\r\n\r\n  toggleItem = id => {\r\n    //first we update the store for instant UI feedback\r\n    this.props.dispatch(handleToggleTodo(id));\r\n  };\r\n\r\n  render() {\r\n    const { todos, loading } = this.props;\r\n    const listItems = loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <List\r\n        toggleItem={this.toggleItem}\r\n        removeItem={this.removeItem}\r\n        items={todos}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2>Todos List</h2>\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"todo\"\r\n            type=\"text\"\r\n            placeholder=\"Add Todo\"\r\n            ref={input => (this.input = input)}\r\n          />\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"btn-container d-flex justify-content-lg-end\">\r\n            <button\r\n              id=\"todoBtn\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.handleAddItem}\r\n            >\r\n              Add Todo\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">{listItems}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Export connected component\r\n */\r\nexport default connect(state => ({\r\n  todos: state.todos,\r\n  loading: state.loading\r\n}))(Todos);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { handleAddGoal, handleDeleteGoal } from \"../actions/goals\";\r\nimport List from \"./List\";\r\nimport Loader from \"./Loader\";\r\n\r\nclass Goals extends Component {\r\n  handleAddItem = e => {\r\n    e.preventDefault();\r\n    const name = this.input.value;\r\n    this.props.dispatch(handleAddGoal(name, () => (this.input.value = \"\")));\r\n  };\r\n\r\n  removeItem = goal => {\r\n    this.props.dispatch(handleDeleteGoal(goal.id));\r\n  };\r\n\r\n  render() {\r\n    const { goals, loading } = this.props;\r\n    const listItems = loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <List removeItem={this.removeItem} items={goals} />\r\n    );\r\n\r\n    return (\r\n      <div className=\"row\">\r\n        <div className=\"col-12\">\r\n          <h2>Goals List</h2>\r\n        </div>\r\n        <div className=\"col-8\">\r\n          <input\r\n            className=\"form-control\"\r\n            id=\"goal\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Add Goal\"\r\n            ref={input => (this.input = input)}\r\n          />\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"btn-container d-flex justify-content-lg-end\">\r\n            <button\r\n              id=\"goalBtn\"\r\n              className=\"btn btn-primary\"\r\n              onClick={this.handleAddItem}\r\n            >\r\n              Add Goal\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-12\">{listItems}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n/**\r\n * Export connected component\r\n */\r\nexport default connect(state => ({\r\n  goals: state.goals,\r\n  loading: state.loading\r\n}))(Goals);\r\n","import React from \"react\";\r\n\r\nconst Nav = () => {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <span className=\"navbar-brand\">Todo App</span>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Nav;\r\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { handleInitialData } from \"../actions/shared\";\nimport { Slide, ToastContainer } from \"react-toastify\";\nimport Todos from \"./Todos\";\nimport Goals from \"./Goals\";\nimport Nav from \"./Nav\";\n\nclass App extends Component {\n  componentDidMount() {\n    const { dispatch } = this.props;\n    dispatch(handleInitialData());\n  }\n  render() {\n    return (\n      <div className=\"main\">\n        <Nav />\n        <div className=\"container my-3\">\n          <Todos />\n          <Goals />\n        </div>\n        <ToastContainer\n          transition={Slide}\n          newestOnTop={true}\n          hideProgressBar={true}\n        />\n      </div>\n    );\n  }\n}\n\nexport default connect(state => ({\n  loading: state.loading\n}))(App);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./index.css\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./reducers\";\nimport middleware from \"./middleware\";\nimport App from \"./components/App\";\nconst store = createStore(reducer, middleware);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}